<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.35.0.0
Copyright (C) 2021 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Abdelrahman Magdy, valeu, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.35.0.2
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.16
Assembler:       Armasm.exe V6.16
Linker/Locator:  ArmLink.exe V6.16
Library Manager: ArmAr.exe V6.16
Hex Converter:   FromElf.exe V6.16
CPU DLL:         SARMCM3.DLL V5.35.0.2
Dialog DLL:      DCM.DLL V1.17.3.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.9.0
Dialog DLL:      TCM.DLL V1.53.0.0
 
<h2>Project:</h2>
H:\Embedded_Abdelrahman_Magdy\01_ARM\06_Mina\STM32F429ZITx\01_MCAL\03_NVIC\NVIC_Driver.uvprojx
Project File Date:  08/20/2021

<h2>Output:</h2>
*** Using Compiler 'V6.16', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'app'
main.c(59): warning: no previous prototype for function 'EXTI0_IRQHandler' [-Wmissing-prototypes]
void EXTI0_IRQHandler()
     ^
main.c(59): note: declare 'static' if the function is not intended to be used outside of this translation unit
void EXTI0_IRQHandler()
^
static 
main.c(59): warning: this old-style function definition is not preceded by a prototype [-Wstrict-prototypes]
void EXTI0_IRQHandler()
                     ^
main.c(70): warning: no previous prototype for function 'EXTI1_IRQHandler' [-Wmissing-prototypes]
void EXTI1_IRQHandler()
     ^
main.c(70): note: declare 'static' if the function is not intended to be used outside of this translation unit
void EXTI1_IRQHandler()
^
static 
main.c(70): warning: this old-style function definition is not preceded by a prototype [-Wstrict-prototypes]
void EXTI1_IRQHandler()
                     ^
4 warnings generated.
compiling main.c...
RCC_program.c(59): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CR   , 18) ;                // Disable Byp
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(61): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 1 ) ;                // System Clk  HSE
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(68): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 1 ) ;                                // System Clk  HSE
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(71): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                                        default         :  
                                        ^
RCC_program.c(81): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 0   ) ;                                       // System Clk  HSI
                                ^~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(82): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 1   ) ;                                       // System Clk  HSI
                                ^~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(94): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                         CLR_BIT(RCC_CFGR , 0 ) ;                                       // System Clk  PLL
                                                         ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(101): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                         CLR_BIT(RCC_PLLCFGR ,22) ;                                       //  PLL From HSI
                                                         ^~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(102): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                         CLR_BIT(RCC_CFGR , 0 )   ;                                       // System Clk  PLL
                                                         ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(107): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                                         default : 
                                         ^
RCC_program.c(114): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                        default         :  break;
                        ^
RCC_program.c(129): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR , 10) ;
                        ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(130): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR , 11) ;
                        ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(131): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR, 12) ;
                        ^~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(134): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR , 10) ;
                        ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(135): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR , 11) ;
                        ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(140): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR , 11) ;
                        ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(144): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        CLR_BIT(RCC_CFGR , 10) ;
                        ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(153): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                default: break;
                ^
RCC_program.c(170): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 13) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(171): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 14) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(172): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 15) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(175): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 13) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(176): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 14) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(181): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 14) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(185): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                CLR_BIT(RCC_CFGR , 13) ;
                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(195): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                        default: break;
                        ^
RCC_program.c(218): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 4 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(219): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 5 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(220): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 6 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(221): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 7 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(225): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 4 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(226): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 5 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(227): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 6 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(233): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 5 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(234): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 6 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(239): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 4 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(241): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 6 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(248): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 6 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(253): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 4 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(254): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 5 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(260): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                                CLR_BIT(RCC_CFGR , 4 ) ;
                                                ^~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(16): note: expanded from macro 'CLR_BIT'
 #define CLR_BIT(REG , BITNUM) REG &= ~(1<<BITNUM)
                                   ~~ ^~~~~~~~~~~~
RCC_program.c(215): warning: enumeration values 'AHB_Pre32' and 'AHB_Pre256' not explicitly handled in switch [-Wswitch-enum]
                        switch (AHB_Prescaler)
                                ^
RCC_program.c(312): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
                 default :
                 ^
44 warnings generated.
compiling RCC_program.c...
assembling startup_stm32f429xx.s...
NVIC_program.c(164): warning: implicit conversion loses integer precision: 'unsigned long' to 'u8' (aka 'unsigned char') [-Wimplicit-int-conversion]
          Local_u8ActiveState= NVIC_IABR0 &(1<<Copy_u8IntNum);  
                             ~ ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
NVIC_program.c(170): warning: implicit conversion loses integer precision: 'unsigned long' to 'u8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                Local_u8ActiveState= NVIC_IABR0 &(1<<Copy_u8IntNum); 
                                   ~ ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
NVIC_program.c(176): warning: implicit conversion loses integer precision: 'unsigned long' to 'u8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                Local_u8ActiveState= NVIC_IABR0 &(1<<Copy_u8IntNum); 
                                   ~ ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
3 warnings generated.
compiling NVIC_program.c...
compiling system_stm32f4xx.c...
GPIO_program.c(25): warning: In file included from...
./GPIO_config.h(37): warning: no newline at end of file [-Wnewline-eof]
#endif /* GPIO_CONFIG_H_ */
                           ^
1 warning generated.
compiling GPIO_program.c...
linking...
Program Size: Code=1576 RO-data=444 RW-data=0 ZI-data=1632  
".\Objects\NVIC_Driver.axf" - 0 Error(s), 52 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.8.0.pack
                ARM.CMSIS.5.8.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.5.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F4xx_DFP.2.15.0.pack
                Keil.STM32F4xx_DFP.2.15.0
                STMicroelectronics STM32F4 Series Device Support, Drivers and Examples
   * Component: Startup Version: 2.6.3

<h2>Collection of Component include folders:</h2>
  .\RTE\_app
  C:\Users\Pro\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include
  C:\Users\Pro\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.5.0

   * Component: Keil::Device:Startup:2.6.3
      Include file:  Drivers\CMSIS\Device\ST\STM32F4xx\Include\stm32f4xx.h
      Source file:   MDK\Device\Source\ARM\STM32F42xxx_43xxx_OPT.s
      Source file:   MDK\Device\Source\ARM\STM32F4xx_OTP.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\arm\startup_stm32f429xx.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c
Build Time Elapsed:  00:00:03
</pre>
</body>
</html>
